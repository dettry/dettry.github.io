[{"title":"Java笔记","url":"/2023/05/05/Java%E7%AC%94%E8%AE%B0/","content":"Java笔记基础篇\njava语言概述整体概述\njava语言的特点特点一：面向对象\n两概三特：类、对象；封装、继承、多态；\n特点二：健壮性\n去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等）\n特点三：跨平台性\n原理：先安装一个JVM虚拟机，然后由JVM负责JAVA程序在该系统上运行。\nJava核心机制\n   Java虚拟机：对于不同的平台有不同的虚拟机；\n   垃圾回收机制：\n注释单行和多行注释与c语言注释相同\n文档注释：JAVA所特有\n格式：&#x2F;**  *&#x2F;\n作用：注释的内容可以被jdk提供的工具javadoc所解析，生成网页形式的程序说明文档。\njava API文档英文版：版本8\n中文版：版本6\nJava基本语法保留字goto、const，java没有赋予其特殊含义，但在命名时尽量避开。\n标识符凡是可以自己起的名字都叫标识符。e.g：变量名、类名等等\n命名规范\n包名：多个单词组成时所有字母都小写\n类名、接口名：多单词组成时，所有单词首字母大写\n变量名、方法名：多单词组成时，第一个单词首字母小写，从第二个单词开始首字母大写。\n常量名：所有字母都大写，多单词时，每个单词用下划线连接。\n变量的类型\n变量运算规则的两种特殊情况定义long型变量：long len&#x3D;78899786676l&#x2F;L;\n定义float型变量：float len&#x3D;12.3f&#x2F;F;\n但现实经常使用double型变量，精度更高。\n整型常量默认类型：int\n浮点型常量默认类型：double\n算数运算符+、-、*、&#x2F;、++、–、%\n赋值运算符&#x3D;\n扩展运算符:+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;+、%&#x3D;\n比较运算符基本与c语言一样。\ninstanceof:检查是否是类的对象。\n进阶篇SpringBoot开发以后所用技术：mybatis+druid+远程服务器，别使用lombok进行开发。\n基础篇1. parent将以前spring开发时所需要配置的pom 文件进行整合，方便管理。\n\n  小结\n\n开发springBoot程序要继承spring-boot-starter-parent\n\nspring-boot-starter-parent中定义了若干个依赖管理（不是具体的坐标，只是把你要用的版本管理好，而没提供具体的坐标）\n\n继承parent模块可以避免多个依赖使用相同技术时出现依赖版本冲突（做版本的统一化管理)\n\n继承parent的形式也可以采用引入依赖的形式实现效果\n\n\n2. starterstarter\n​\t\t1. SpringBoot中常见项目名称，定义了当前项目使用的所有依赖坐标 ，以达到减少依赖配置的目的\nparent\n    1. 所有SpringBoot项目要继承的项目，定义了若干个坐标版本号（依赖管理，而非依赖），以达到减少依赖冲突的目的\n    1. spring-boot-starter-parent各版本间存在着诸多坐标版本不同\n\n实际开发\n\n使用任意坐标时，仅书写GAV中的G和A，V由SpringBoot提供，除非SpringBoot未提供对应版本V\n\n如发生坐标错误，再指定Version（要小心版本冲突)\n\n\n小结\n\n开发springBoot程序需要导入坐标时通常导入对应的starter\n每个不同的starter根据功能不同，通常包含多个依赖坐标\n使用starter可以实现快速配置的效果，达到简化配置的目的\n\n3. 引导类下图即为引导类\n\n无论是做spring程序还是做springmvc的程序，最后都会运行出来一个spring容器的对象。所有对象都以bean的形式交给spring容器管理。\nSpringBoot的引导类是Boot工程的执行入口，运行main方法就可以启动项目\nSpringBoot工程运行后初始化Spring容器，扫描引导类所在包加载bean\n得到bean的方式有四种：\n\n以类型的形式（即class）\n\n\n4. 辅助功能\n\n内置服务器：\ntomcat(默认)\njetty\nundertow\n\n小结\n\n内嵌Tomcat服务器是SpringBoot辅助功能之一\n内嵌Tomcat工作原理是将Tomcat服务器作为对象运行，并将该对象交给Spring容器管理\n变更内嵌服务器思想是去除现有服务器，添加全新的服务器\n\n5. Rest风格开发入门案例1.以前的开发\n\n2. 接受参数的三种方式\n3.现在的开发\n6. boot配置6.1 准备工作模板的制作\n\n在工作空间中复制对应工程，并修改工程名称\n删除与Idea相关配置文件，仅保留src目录与pom. xml文件\n修改pom.xml文件中的artifactId与新工程&#x2F;模块名相同\n删除name标签（可选)\n保留备份工程供后期使用\n\n6.2 属性配置\n\nSpringBoot提供了3种配置文件的格式properties (传统格式&#x2F;默认格式)yml（主流格式)yaml\n\n配置文件间的加载优先级properties (最高)\nyml（常用）\nyaml(最低)\n\n不同配置文件中相同配置按照加载优先级相互覆盖，不同配置文件中不同配置全部保留\n\n\nyaml或者yml自动提示功能消失解决方案\n\nyaml书写格式：注意属性名冒号后面与数据之间有一个空格\n\n读取数据\n\n7. 整合第三方技术\n整合junit小结\n\n导入测试对应的starter(如果是自己手工创建的话)\n\n测试类使用@SpringBootTest修饰\n\n使用自动装配的形式添加要测试的对象\n\n测试类如果存在于引导类所在包或子包中无需指定引导类\n\n测试类如果不存在于引导类所在的包或子包中需要通过classes属性指定引导类\n\n\n\n整合mybatis小结\n\n勾选MyBatis技术，也就是导入MyBatis对应的starter\n\n数据库连接相关信息转换成配置\n\n数据库sQL映射需要添加@Mapper被容器识别到\n  springboot的版本过低导致的问题处理\n\n\n\n\n\n​\t\t\t2.1 MySQL 8.X驱动强制要求设置时区\n​\t\t\t\t修改url，添加serverTimezone设定\n​\t\t\t\t修改MySQL数据库配置（略)\n​\t\t\t2.2 驱动类过时，提醒更换为com.mysql.cj.jdbc.Driver\n\nboot整合东西分为三个部分:\n\n导入对应的start\n做相应的配置\n直接使用对应的技术进行开发\n\n\n\n整合mybatis-plus小结 \n\n\n\n\n整合Druid(即数据源)\n\n​      \n\n\n\n","tags":["java"]},{"title":"myfirst","url":"/2023/12/23/myfirst/","content":"这是一个测试文件","tags":["java"]},{"title":"Linux笔记","url":"/2023/05/05/Linux%E7%AC%94%E8%AE%B0/","content":"Linux笔记1. 目录结构\n2. 常用命令2.1 ls对应英文：list  \n作用： 查看当前目录下的内容\nll 对应 ls -l \n作用： 查看当前目录下的所有内容和每个文件的详细信息。\n2.2 pwd对应英文：print work directory \n作用： 查看当前所在目录\n2.3 touchtouch [文件名] \n作用：如果文件不存在，新建文件\n2.4 cd~表示当前用户的home目录\n.表示当前所在目录\n..表示当前目录位置的上级目录\n2.5 catcat [-n] fileName\n-n: 由1开始对所有输出的行数编号\ncat &#x2F;etc&#x2F;profile   查看&#x2F;etc目录下的profile文件内容\n2.6 rmdir作用：删除空目录\n语法：rmdir [-p] dirName\n-p: 当子目录被删除后使父目录为空目录的话，则一并删除\nrm\n作用：删除文件或者目录\n语法：rm [-rf] name\n-r:将目录及目录中的所有文件（目录）逐一删除，即递归删除\n-f: 无需确认直接删除\n2.7 tar作用：对文件进行打包、解包、压缩、解压\n语法：tar [-zcxvf] fileName [files]\n包文件后缀为.tar表示只是完成了打包，并没有压缩\n包文件后缀为.tar.gz表示打包的同时还进行了压缩\n说明：\n-z: z代表gzip，通过gzip命令处理文件，gzip可以对文件压缩或者解压\n-c: c代表的是create，即创建新的包文件\n-x: x代表的是extract，实现从包文件中还原文件\n-v: v代表的是verbose,显示命令的执行过程\n-f: f代表的是file ,用于指定包文件的名称\n","tags":["linux"]},{"title":"Hello World","url":"/2023/12/22/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"个人博客搭建笔记","url":"/2023/12/24/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/","content":"个人博客搭建笔记Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n一、环境准备1. 安装node.jsnode.js的安装与配置教程-CSDN博客\n2. 安装gitGit 2.43.0的安装教程-CSDN博客\n二、搭建博客\n以管理员的身份运行cmd输入命令下载hexo框架\n\nnpm install -g hexo-cli\n\n出现下图所示样式表示下载成功，因为我已经下载过了，所以没有什么变化。图中的警告先不用管，不影响使用。警告的大致意思是fsevents不支持windows平台。因为它是适用于苹果系统的，但是我们下载框架的时候是全都下载的，所以会出现这个警告。\n\n在自己想要存放博客的文件夹下新建一个文件，名字自拟。从本文件夹直接进入cmd，或者先进入cmd，cd该文件夹下。输入命令初始化一个博客。\nhexo init\n\n初始化中断，根据提示可以看到是在安装依赖时出了问题。\n\n原因是因为国内现在无法百分百概率访问Github，因此npm可能会下载失败；也有可能是因为文件权限的问题。总之按照提示再重新操作一遍以管理员的身份运行cmd并进入新建的博客文件夹下，使用hexo init命令后居然成功了。如下图所示，出现 Start blogging with Hexo 字样代表成功。\n\n初始化完成后使用命令就可以访问自己的博客了。\nhexo s\n\n按住ctrl键鼠标左键点击即可跳转到博客网页。\n\n博客网站如下图所示，默认会新建一篇文章。至此，博客的搭建工作告一段落。\n\n\n三、将博客部署到Github上使用命令安装一键将博客推送至GitHub上的插件\nnpm install hexo-deployer-git --save\n\n使用管理员的身份运行cmd输入命令后安装成功。\n\n在Github上创建一个个人仓库用于存放博客，首先登录GitHub，在个人仓库中找到新建仓库点击进入。\n\n仓库名为自己的GitHub用户名.github.io，如图所示，一定要这样设置，不然会不起作用。\n\n描述根据自己需要填写，然后点击创建仓库。\n\n创建完成后会自动跳转到你刚才创建的仓库内，在仓库中找到如下图所示位置，点击复制，后面修改博客的配置文件时会用到。\n\n使用vscode或者记事本打开_config.yml找到deploy修改其中的内容为，保存并退出。\ndeploy:  type: &#x27;git&#x27;  repo: &#x27;https://github.com/dettry/dettry.github.io.git&#x27; #为你创建的GitHub个人仓库地址  branch: &#x27;master&#x27;\n\n进入cmd中cd到博客存放的路径下执行如下命令就可以将博客部署到GitHub上了。\nhexo cleanhexo ghexo d\n\n记得在推送之前先开启梯子，然后将代理服务器打开。\n首先右键网络选择网络和Internet设置。\n\n找到使用代理服务器，点击编辑将代理服务器打开然后保存。\n\n最后推送成功后在地址栏输入dettry.github.io即可访问自己的博客。\n","tags":["hexo"]}]