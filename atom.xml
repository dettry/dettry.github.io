<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-12-23T08:32:13.760Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>myfirst</title>
    <link href="http://example.com/2023/12/23/myfirst/"/>
    <id>http://example.com/2023/12/23/myfirst/</id>
    <published>2023-12-23T08:30:45.000Z</published>
    <updated>2023-12-23T08:32:13.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一个测试文件"><a href="#这是一个测试文件" class="headerlink" title="这是一个测试文件"></a>这是一个测试文件</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是一个测试文件&quot;&gt;&lt;a href=&quot;#这是一个测试文件&quot; class=&quot;headerlink&quot; title=&quot;这是一个测试文件&quot;&gt;&lt;/a&gt;这是一个测试文件&lt;/h1&gt;</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/12/22/hello-world/"/>
    <id>http://example.com/2023/12/22/hello-world/</id>
    <published>2023-12-22T06:23:18.540Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;! This is your very first post. Che</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux笔记</title>
    <link href="http://example.com/2023/05/05/Linux%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/05/05/Linux%E7%AC%94%E8%AE%B0/</id>
    <published>2023-05-05T06:12:45.000Z</published>
    <updated>2023-12-23T09:05:10.544Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux笔记"><a href="#Linux笔记" class="headerlink" title="Linux笔记"></a>Linux笔记</h1><h2 id="1-目录结构"><a href="#1-目录结构" class="headerlink" title="1. 目录结构"></a>1. 目录结构</h2><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20230401113335627.png"                        alt="image-20230401113335627"                 ></p><h2 id="2-常用命令"><a href="#2-常用命令" class="headerlink" title="2. 常用命令"></a>2. 常用命令</h2><h3 id="2-1-ls"><a href="#2-1-ls" class="headerlink" title="2.1 ls"></a>2.1 ls</h3><p>对应英文：list  </p><p>作用： 查看当前目录下的内容</p><p>ll 对应 ls -l </p><p>作用： 查看当前目录下的所有内容和每个文件的详细信息。</p><h3 id="2-2-pwd"><a href="#2-2-pwd" class="headerlink" title="2.2 pwd"></a>2.2 pwd</h3><p>对应英文：print work directory </p><p>作用： 查看当前所在目录</p><h3 id="2-3-touch"><a href="#2-3-touch" class="headerlink" title="2.3 touch"></a>2.3 touch</h3><p>touch [文件名] </p><p>作用：如果文件不存在，新建文件</p><h3 id="2-4-cd"><a href="#2-4-cd" class="headerlink" title="2.4 cd"></a>2.4 cd</h3><p>~表示当前用户的home目录</p><p>.表示当前所在目录</p><p>..表示当前目录位置的上级目录</p><h3 id="2-5-cat"><a href="#2-5-cat" class="headerlink" title="2.5 cat"></a>2.5 cat</h3><p>cat [-n] fileName</p><p>-n: 由1开始对所有输出的行数编号</p><p>cat &#x2F;etc&#x2F;profile   查看&#x2F;etc目录下的profile文件内容</p><h3 id="2-6-rmdir"><a href="#2-6-rmdir" class="headerlink" title="2.6 rmdir"></a>2.6 rmdir</h3><p>作用：删除空目录</p><p>语法：rmdir [-p] dirName</p><p>-p: 当子目录被删除后使父目录为空目录的话，则一并删除</p><p>rm</p><p>作用：删除文件或者目录</p><p>语法：rm [-rf] name</p><p>-r:将目录及目录中的所有文件（目录）逐一删除，即递归删除</p><p>-f: 无需确认直接删除</p><h3 id="2-7-tar"><a href="#2-7-tar" class="headerlink" title="2.7 tar"></a>2.7 tar</h3><p>作用：对文件进行打包、解包、压缩、解压</p><p>语法：tar [-zcxvf] fileName [files]</p><p>包文件后缀为.tar表示只是完成了打包，并没有压缩</p><p>包文件后缀为.tar.gz表示打包的同时还进行了压缩</p><p>说明：</p><p>-z: z代表gzip，通过gzip命令处理文件，gzip可以对文件压缩或者解压</p><p>-c: c代表的是create，即创建新的包文件</p><p>-x: x代表的是extract，实现从包文件中还原文件</p><p>-v: v代表的是verbose,显示命令的执行过程</p><p>-f: f代表的是file ,用于指定包文件的名称</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux笔记&quot;&gt;&lt;a href=&quot;#Linux笔记&quot; class=&quot;headerlink&quot; title=&quot;Linux笔记&quot;&gt;&lt;/a&gt;Linux笔记&lt;/h1&gt;&lt;h2 id=&quot;1-目录结构&quot;&gt;&lt;a href=&quot;#1-目录结构&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记</title>
    <link href="http://example.com/2023/05/05/Java%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/05/05/Java%E7%AC%94%E8%AE%B0/</id>
    <published>2023-05-05T06:11:45.000Z</published>
    <updated>2023-12-23T08:43:30.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java笔记"><a href="#Java笔记" class="headerlink" title="Java笔记"></a>Java笔记</h1><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221112111329540.png"                        alt="image-20221112111329540"                 ></p><h3 id="java语言概述"><a href="#java语言概述" class="headerlink" title="java语言概述"></a>java语言概述</h3><h4 id="整体概述"><a href="#整体概述" class="headerlink" title="整体概述"></a>整体概述</h4><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221115162358155.png"                        alt="image-20221115162358155"                 ></p><h4 id="java语言的特点"><a href="#java语言的特点" class="headerlink" title="java语言的特点"></a>java语言的特点</h4><p>特点一：面向对象</p><p>两概三特：类、对象；封装、继承、多态；</p><p>特点二：健壮性</p><p>去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等）</p><p>特点三：跨平台性</p><p>原理：先安装一个JVM虚拟机，然后由JVM负责JAVA程序在该系统上运行。</p><p>Java核心机制</p><p>   Java虚拟机：对于不同的平台有不同的虚拟机；</p><p>   垃圾回收机制：</p><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>单行和多行注释与c语言注释相同</p><p>文档注释：JAVA所特有</p><p>格式：&#x2F;**  *&#x2F;</p><p>作用：注释的内容可以被jdk提供的工具javadoc所解析，生成网页形式的程序说明文档。</p><h4 id="java-API文档"><a href="#java-API文档" class="headerlink" title="java API文档"></a>java API文档</h4><p>英文版：版本8</p><p>中文版：版本6</p><h3 id="Java基本语法"><a href="#Java基本语法" class="headerlink" title="Java基本语法"></a>Java基本语法</h3><h4 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h4><p>goto、const，java没有赋予其特殊含义，但在命名时尽量避开。</p><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><p>凡是可以自己起的名字都叫标识符。e.g：变量名、类名等等</p><p>命名规范</p><p>包名：多个单词组成时所有字母都小写</p><p>类名、接口名：多单词组成时，所有单词首字母大写</p><p>变量名、方法名：多单词组成时，第一个单词首字母小写，从第二个单词开始首字母大写。</p><p>常量名：所有字母都大写，多单词时，每个单词用下划线连接。</p><h4 id="变量的类型"><a href="#变量的类型" class="headerlink" title="变量的类型"></a>变量的类型</h4><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221116165948252.png"                        alt="image-20221116165948252"                 ></p><h4 id="变量运算规则的两种特殊情况"><a href="#变量运算规则的两种特殊情况" class="headerlink" title="变量运算规则的两种特殊情况"></a>变量运算规则的两种特殊情况</h4><p>定义long型变量：long len&#x3D;78899786676l&#x2F;L;</p><p>定义float型变量：float len&#x3D;12.3f&#x2F;F;</p><p>但现实经常使用double型变量，精度更高。</p><p>整型常量默认类型：int</p><p>浮点型常量默认类型：double</p><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p>+、-、*、&#x2F;、++、–、%</p><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>&#x3D;</p><p>扩展运算符:+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;+、%&#x3D;</p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>基本与c语言一样。</p><p>instanceof:检查是否是类的对象。</p><h2 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h2><h3 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h3><p><strong>开发以后所用技术：mybatis+druid+远程服务器，别使用lombok进行开发</strong>。</p><h4 id="基础篇-1"><a href="#基础篇-1" class="headerlink" title="基础篇"></a>基础篇</h4><h5 id="1-parent"><a href="#1-parent" class="headerlink" title="1. parent"></a>1. parent</h5><p>将以前spring开发时所需要配置的pom 文件进行整合，方便管理。</p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221125191759218.png"                        alt="image-20221125191759218"                 ></p><p>  <strong>小结</strong></p><ol><li><p>开发springBoot程序要继承spring-boot-starter-parent</p></li><li><p>spring-boot-starter-parent中定义了若干个依赖管理（不是具体的坐标，只是把你要用的版本管理好，而没提供具体的坐标）</p></li><li><p>继承parent模块可以避免多个依赖使用相同技术时出现依赖版本冲突（做版本的统一化管理)</p></li><li><p>继承parent的形式也可以采用引入依赖的形式实现效果</p></li></ol><h5 id="2-starter"><a href="#2-starter" class="headerlink" title="2. starter"></a>2. starter</h5><p><strong>starter</strong></p><p>​1. SpringBoot中常见项目名称，定义了当前项目使用的所有依赖坐标 ，以达到<strong>减少依赖配置</strong>的目的</p><p><strong>parent</strong></p><pre><code>    1. 所有SpringBoot项目要继承的项目，定义了若干个坐标版本号（依赖管理，而非依赖），以达到减少依赖冲突的目的    1. spring-boot-starter-parent各版本间存在着诸多坐标版本不同</code></pre><p><strong>实际开发</strong></p><ol><li><p>使用任意坐标时，仅书写GAV中的G和A，V由SpringBoot提供，除非SpringBoot未提供对应版本V</p></li><li><p>如发生坐标错误，再指定Version（要小心版本冲突)</p></li></ol><p><strong>小结</strong></p><ol><li>开发springBoot程序需要导入坐标时通常导入对应的starter</li><li>每个不同的starter根据功能不同，通常包含多个依赖坐标</li><li>使用starter可以实现快速配置的效果，达到简化配置的目的</li></ol><h5 id="3-引导类"><a href="#3-引导类" class="headerlink" title="3. 引导类"></a>3. 引导类</h5><p>下图即为引导类</p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221126100829179.png"                        alt="image-20221126100829179"                 ></p><p>无论是做spring程序还是做springmvc的程序，最后都会运行出来一个spring容器的对象。所有对象都以bean的形式交给spring容器管理。</p><p>SpringBoot的引导类是Boot工程的执行入口，运行main方法就可以启动项目</p><p>SpringBoot工程运行后初始化Spring容器，扫描引导类所在包加载bean</p><p><strong>得到bean的方式有四种：</strong></p><ol><li>以类型的形式（即class）</li><li></li></ol><h5 id="4-辅助功能"><a href="#4-辅助功能" class="headerlink" title="4. 辅助功能"></a>4. 辅助功能</h5><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221126135325136.png"                        alt="image-20221126135325136"                 ></p><blockquote><p>内置服务器：</p><p>tomcat(默认)</p><p>jetty</p><p>undertow</p></blockquote><p><strong>小结</strong></p><ol><li>内嵌Tomcat服务器是SpringBoot辅助功能之一</li><li>内嵌Tomcat工作原理是将Tomcat服务器作为对象运行，并将该对象交给Spring容器管理</li><li>变更内嵌服务器思想是去除现有服务器，添加全新的服务器</li></ol><h5 id="5-Rest风格开发入门案例"><a href="#5-Rest风格开发入门案例" class="headerlink" title="5. Rest风格开发入门案例"></a>5. Rest风格开发入门案例</h5><h6 id="1-以前的开发"><a href="#1-以前的开发" class="headerlink" title="1.以前的开发"></a>1.以前的开发</h6><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221127170845847.png"                        alt="image-20221127170845847"                 ></p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221127171423014.png"                        alt="image-20221127171423014"                 ></p><h6 id="2-接受参数的三种方式"><a href="#2-接受参数的三种方式" class="headerlink" title="2. 接受参数的三种方式"></a>2. 接受参数的三种方式</h6><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221127171256707.png"                        alt="image-20221127171256707"                 ></p><h6 id="3-现在的开发"><a href="#3-现在的开发" class="headerlink" title="3.现在的开发"></a>3.现在的开发</h6><h5 id=""><a href="#" class="headerlink" title=""></a><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221127203229053.png"                        alt="image-20221127203229053"                 ></h5><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221127203519136.png"                        alt="image-20221127203519136"                 ></p><h5 id="6-boot配置"><a href="#6-boot配置" class="headerlink" title="6. boot配置"></a>6. boot配置</h5><h6 id="6-1-准备工作"><a href="#6-1-准备工作" class="headerlink" title="6.1 准备工作"></a>6.1 准备工作</h6><p>模板的制作</p><ol><li>在工作空间中复制对应工程，并修改工程名称</li><li>删除与Idea相关配置文件，仅保留src目录与pom. xml文件</li><li>修改pom.xml文件中的artifactId与新工程&#x2F;模块名相同</li><li>删除name标签（可选)</li><li>保留备份工程供后期使用</li></ol><h6 id="6-2-属性配置"><a href="#6-2-属性配置" class="headerlink" title="6.2 属性配置"></a>6.2 属性配置</h6><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221128170828876.png"                        alt="image-20221128170828876"                 ></p><ol><li><p>SpringBoot提供了3种配置文件的格式<br>properties (传统格式&#x2F;默认格式)<br>yml（主流格式)<br>yaml</p></li><li><p>配置文件间的加载优先级<br>properties (最高)</p><p>yml（常用）</p><p>yaml(最低)</p></li><li><p>不同配置文件中相同配置按照加载优先级相互覆盖，不同配置文件中不同配置全部保留</p></li></ol><p>yaml或者yml自动提示功能消失解决方案</p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221128172557083.png"                        alt="image-20221128172557083"                 ></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yaml书写格式：</span><br><span class="line"></span><br><span class="line">注意属性名冒号后面与数据之间有一个空格</span><br></pre></td></tr></table></figure><p>读取数据</p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221128203619298.png"                        alt="image-20221128203619298"                 ></p><h5 id="7-整合第三方技术"><a href="#7-整合第三方技术" class="headerlink" title="7. 整合第三方技术"></a>7. 整合第三方技术</h5><ol><li><p><strong>整合junit小结</strong></p><ul><li><p>导入测试对应的starter(如果是自己手工创建的话)</p></li><li><p>测试类使用@SpringBootTest修饰</p></li><li><p>使用自动装配的形式添加要测试的对象</p></li><li><p>测试类如果存在于引导类所在包或子包中无需指定引导类</p></li><li><p>测试类如果不存在于引导类所在的包或子包中需要通过classes属性指定引导类</p></li></ul></li><li><p><strong>整合mybatis小结</strong></p><ul><li><p>勾选MyBatis技术，也就是导入MyBatis对应的starter</p></li><li><p>数据库连接相关信息转换成配置</p></li><li><p>数据库sQL映射需要添加@Mapper被容器识别到</p><pre><code>  springboot的版本过低导致的问题处理</code></pre></li></ul></li></ol><p>​2.1 MySQL 8.X驱动强制要求设置时区</p><p>​修改url，添加serverTimezone设定</p><p>​修改MySQL数据库配置（略)</p><p>​2.2 驱动类过时，提醒更换为com.mysql.cj.jdbc.Driver</p><blockquote><p>boot整合东西分为三个部分:</p><ol><li>导入对应的start</li><li>做相应的配置</li><li>直接使用对应的技术进行开发</li></ol></blockquote><ol start="3"><li><strong>整合mybatis-plus小结</strong> <img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221130093255881.png"                        alt="image-20221130093255881"                 ></li></ol><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221130093312809.png"                        alt="image-20221130093312809"                 ></p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20221130093423735.png"                        alt="image-20221130093423735"                 ></p><ol start="4"><li><strong>整合Druid(即数据源)</strong></li></ol><p>​      <img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20230222161204003.png"                        alt="image-20230222161204003"                 ></p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20230228145538979.png"                        alt="image-20230228145538979"                 ></p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20230228145621901.png"                        alt="image-20230228145621901"                 ></p><p><img                         lazyload                       alt="image"                       data-src="C:\Users\85793\AppData\Roaming\Typora\typora-user-images\image-20230228150602825.png"                        alt="image-20230228150602825"                 ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java笔记&quot;&gt;&lt;a href=&quot;#Java笔记&quot; class=&quot;headerlink&quot; title=&quot;Java笔记&quot;&gt;&lt;/a&gt;Java笔记&lt;/h1&gt;&lt;h2 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
</feed>
